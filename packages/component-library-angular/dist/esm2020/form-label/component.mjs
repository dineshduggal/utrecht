import { ChangeDetectionStrategy, Component } from '@angular/core';
import * as i0 from "@angular/core";
export class UtrechtFormLabelAttr {
    constructor() { }
}
UtrechtFormLabelAttr.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: UtrechtFormLabelAttr, deps: [], target: i0.ɵɵFactoryTarget.Component });
UtrechtFormLabelAttr.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.1.0", type: UtrechtFormLabelAttr, selector: "[utrecht-form-label]", inputs: { disabled: "disabled", checked: "checked", type: "type" }, host: { properties: { "class.utrecht-form-label": "true", "class.utrecht-form-label--checkbox": "type === \"checkbox\"", "class.utrecht-form-label--checked": "checked", "class.utrecht-form-label--disabled": "disabled", "class.utrecht-form-label--radio": "type === \"radio\"" } }, ngImport: i0, template: "<ng-content></ng-content>\n", styles: ["/**\n * @license EUPL-1.2\n * Copyright (c) 2021 Robbert Broersma\n */.utrecht-form-label{color:var(--utrecht-form-label-color);font-size:var(--utrecht-form-label-font-size);font-weight:var(--utrecht-form-label-font-weight)}.utrecht-form-label--checkbox{color:var(--utrecht-form-label-checkbox-color, var(--utrecht-form-label-color));font-weight:var(--utrecht-form-label-checkbox-font-weight, var(--utrecht-form-label-font-weight))}.utrecht-form-label--checked{font-weight:var(--utrecht-form-label-checked-font-weight, var(--utrecht-form-label-font-weight))}.utrecht-form-label--disabled{cursor:var(--utrecht-action-disabled-cursor);font-weight:var(--utrecht-form-label-disabled-color, var(--utrecht-form-label-color))}.utrecht-form-label--radio{color:var(--utrecht-form-label-checkbox-color, var(--utrecht-form-label-color));font-weight:var(--utrecht-form-label-radio-font-weight, var(--utrecht-form-label-font-weight))}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: UtrechtFormLabelAttr, decorators: [{
            type: Component,
            args: [{ selector: '[utrecht-form-label]', changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled', 'checked', 'type'], host: {
                        '[class.utrecht-form-label]': 'true',
                        '[class.utrecht-form-label--checkbox]': 'type === "checkbox"',
                        '[class.utrecht-form-label--checked]': 'checked',
                        '[class.utrecht-form-label--disabled]': 'disabled',
                        '[class.utrecht-form-label--radio]': 'type === "radio"',
                    }, template: "<ng-content></ng-content>\n", styles: ["/**\n * @license EUPL-1.2\n * Copyright (c) 2021 Robbert Broersma\n */.utrecht-form-label{color:var(--utrecht-form-label-color);font-size:var(--utrecht-form-label-font-size);font-weight:var(--utrecht-form-label-font-weight)}.utrecht-form-label--checkbox{color:var(--utrecht-form-label-checkbox-color, var(--utrecht-form-label-color));font-weight:var(--utrecht-form-label-checkbox-font-weight, var(--utrecht-form-label-font-weight))}.utrecht-form-label--checked{font-weight:var(--utrecht-form-label-checked-font-weight, var(--utrecht-form-label-font-weight))}.utrecht-form-label--disabled{cursor:var(--utrecht-action-disabled-cursor);font-weight:var(--utrecht-form-label-disabled-color, var(--utrecht-form-label-color))}.utrecht-form-label--radio{color:var(--utrecht-form-label-checkbox-color, var(--utrecht-form-label-color));font-weight:var(--utrecht-form-label-radio-font-weight, var(--utrecht-form-label-font-weight))}\n"] }]
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2Zvcm0tbGFiZWwvY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vc3JjL2Zvcm0tbGFiZWwvaW5kZXguaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQWdCbkUsTUFBTSxPQUFPLG9CQUFvQjtJQUMvQixnQkFBZSxDQUFDOztpSEFETCxvQkFBb0I7cUdBQXBCLG9CQUFvQix3WkNoQmpDLDZCQUNBOzJGRGVhLG9CQUFvQjtrQkFkaEMsU0FBUzsrQkFDRSxzQkFBc0IsbUJBR2YsdUJBQXVCLENBQUMsTUFBTSxVQUN2QyxDQUFDLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSxDQUFDLFFBQ2pDO3dCQUNKLDRCQUE0QixFQUFFLE1BQU07d0JBQ3BDLHNDQUFzQyxFQUFFLHFCQUFxQjt3QkFDN0QscUNBQXFDLEVBQUUsU0FBUzt3QkFDaEQsc0NBQXNDLEVBQUUsVUFBVTt3QkFDbEQsbUNBQW1DLEVBQUUsa0JBQWtCO3FCQUN4RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnW3V0cmVjaHQtZm9ybS1sYWJlbF0nLFxuICB0ZW1wbGF0ZVVybDogJ2luZGV4Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnaW5kZXguc2NzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgaW5wdXRzOiBbJ2Rpc2FibGVkJywgJ2NoZWNrZWQnLCAndHlwZSddLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy51dHJlY2h0LWZvcm0tbGFiZWxdJzogJ3RydWUnLFxuICAgICdbY2xhc3MudXRyZWNodC1mb3JtLWxhYmVsLS1jaGVja2JveF0nOiAndHlwZSA9PT0gXCJjaGVja2JveFwiJyxcbiAgICAnW2NsYXNzLnV0cmVjaHQtZm9ybS1sYWJlbC0tY2hlY2tlZF0nOiAnY2hlY2tlZCcsXG4gICAgJ1tjbGFzcy51dHJlY2h0LWZvcm0tbGFiZWwtLWRpc2FibGVkXSc6ICdkaXNhYmxlZCcsXG4gICAgJ1tjbGFzcy51dHJlY2h0LWZvcm0tbGFiZWwtLXJhZGlvXSc6ICd0eXBlID09PSBcInJhZGlvXCInLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBVdHJlY2h0Rm9ybUxhYmVsQXR0ciB7XG4gIGNvbnN0cnVjdG9yKCkge31cbn1cbiIsIjxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiJdfQ==